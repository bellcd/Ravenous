{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SortByOptions/SortByOptions.jsx","components/LocationSuggestions/LocationSuggestions.jsx","components/InputFields/InputFields.jsx","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","href","this","props","business","urlYelp","src","imageSrc","alt","name","urlGoogleMaps","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","Distance","SortByOptions","sortByOption","sortBy","_this","Object","keys","sortByOptionValue","getSortByClass","onClick","onSortByChange","bind","prevProps","prevState","location","term","clickEventTarget","toString","searchYelp","radius","onHandleClearClickEventTarget","renderSortByOptions","LocationSuggestions","suggestions","length","suggestion","index","value","renderLocationSuggestions","InputFields","keyPressed","onHandleClearEnterPress","clickEventTargetId","getLocations","Fragment","onKeyUp","onTermChange","placeholder","list","onLocationChange","components_LocationSuggestions_LocationSuggestions","type","onRadiusChange","min","max","SearchBar","handleSearch","event","preventDefault","components_SortByOptions_SortByOptions","onSortBy","components_InputFields_InputFields","apiKey","Yelp","search","console","log","concat","fetch","headers","Authorization","then","response","json","error","jsonResponse","space","address1","streetAddress","replace","zip","zip_code","url","image_url","categories","title","review_count","locations","text","terms","element","catch","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClearEnterPress","setState","handleClearClickEventTarget","arguments","undefined","e","target","radiusInMeters","Math","floor","_this2","components_SearchBar_SearchBar","handleSortByChange","handleTermChange","handleLocationChange","handleRadiusChange","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oTAiCeA,sMAzBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAMC,KAAKC,MAAMC,SAASC,SAASR,EAAAC,EAAAC,cAAA,OAAKO,IAAKJ,KAAKC,MAAMC,SAASG,SAAUC,IAAI,OAEpFX,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASK,MACzBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAMC,KAAKC,MAAMC,SAASM,eAC3Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASO,SACxBd,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASQ,MACxBf,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASS,MAAxB,IAAgCX,KAAKC,MAAMC,SAASU,WAGxDjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASW,UACzBlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUE,KAAKC,MAAMC,SAASY,QAC5CnB,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASa,uBAtBXC,IAAMC,YCcdC,mLAXX,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,IACEE,KAAKC,MAAMkB,WAAWC,IAAI,SAAAlB,GACxB,OAAOP,EAAAC,EAAAC,cAACwB,EAAD,CAAUnB,SAAUA,EAAUoB,IAAKpB,EAASqB,eALlCP,IAAMC,WCC3BO,SAAgB,CACpBC,aAAc,aACdC,gBAAiB,SACjBC,gBAAiB,eACjBC,SAAY,aAoCCC,yLAhCEC,GACb,OAAI9B,KAAKC,MAAM8B,SAAWD,EACjB,SAEA,iDAIW,IAAAE,EAAAhC,KACpB,OAAOiC,OAAOC,KAAKV,GAAeJ,IAAI,SAAAU,GAEpC,IAAIK,EAAoBX,EAAcM,GACtC,OAAOnC,EAAAC,EAAAC,cAAA,MAAIC,UAAWkC,EAAKI,eAAeD,GAAoBb,IAAKa,EACnEE,QAASL,EAAK/B,MAAMqC,eAAeC,KAAKP,EAAMG,IAAqBL,gDAOpDU,EAAWC,GACA,KAAxBzC,KAAKC,MAAMyC,UAAuC,KAApB1C,KAAKC,MAAM0C,MAA0D,2BAA3C3C,KAAKC,MAAM2C,iBAAiBC,aACtF7C,KAAKC,MAAM6C,WAAW9C,KAAKC,MAAM0C,KAAM3C,KAAKC,MAAMyC,SAAU1C,KAAKC,MAAM8B,OAAQ/B,KAAKC,MAAM8C,QAC1F/C,KAAKC,MAAM+C,kEAKb,OAAOhD,KAAKiD,6BA7BYhC,aCMbiC,sMAZX,GAAIlD,KAAKC,MAAMkD,YAAYC,OAAS,EAClC,OAAOpD,KAAKC,MAAMkD,YAAY/B,IAAI,SAACiC,EAAYC,GAC7C,OAAO3D,EAAAC,EAAAC,cAAA,UAAQyB,IAAK+B,EAAYE,MAAOF,GAAaA,sCAMxD,OAAOrD,KAAKwD,mCAVkBvC,aC6BnBwC,6LAzBMjB,EAAWC,GACA,KAAxBzC,KAAKC,MAAMyC,UAAuC,KAApB1C,KAAKC,MAAM0C,MAAyC,UAA1B3C,KAAKC,MAAMyD,YACrE1D,KAAKC,MAAM6C,WAAW9C,KAAKC,MAAM0C,KAAM3C,KAAKC,MAAMyC,SAAU1C,KAAKC,MAAM8B,OAAQ/B,KAAKC,MAAM8C,QAC1F/C,KAAKC,MAAM0D,2BACgC,uBAAlC3D,KAAKC,MAAM2D,oBAAuE,KAAxB5D,KAAKC,MAAMyC,UAAmB1C,KAAKC,MAAMkD,cAAgBX,EAAUW,aAEtInD,KAAKC,MAAM4D,aAAa7D,KAAKC,MAAMyC,2CAOrC,OACE/C,EAAAC,EAAAC,cAACF,EAAAC,EAAMkE,SAAP,KACAnE,EAAAC,EAAAC,cAAA,SAAO0B,GAAG,iBAAiBwC,QAAS/D,KAAKC,MAAM+D,aAAcC,YAAY,mCACzEtE,EAAAC,EAAAC,cAAA,SAAOqE,KAAK,YAAY3C,GAAG,qBAAqBwC,QAAS/D,KAAKC,MAAMkE,iBAAkBF,YAAY,WAClGtE,EAAAC,EAAAC,cAAA,YAAU0B,GAAG,aACX5B,EAAAC,EAAAC,cAACuE,EAAD,CAAqBjB,YAAanD,KAAKC,MAAMkD,eAE/CxD,EAAAC,EAAAC,cAAA,SAAO0B,GAAG,mBAAmB8C,KAAK,SAASN,QAAS/D,KAAKC,MAAMqE,eAAgBL,YAAY,2BAA2BM,IAAI,IAAIC,IAAI,eAvB9GvD,aCsDXwD,6MApDbC,aAAe,SAACC,GACU,KAApB3C,EAAK/B,MAAM0C,MAAuC,KAAxBX,EAAK/B,MAAMyC,UACvCV,EAAK/B,MAAM6C,WAAWd,EAAK/B,MAAM0C,KAAMX,EAAK/B,MAAMyC,SAAUV,EAAK/B,MAAM8B,OAAQC,EAAK/B,MAAM8C,QAExF4B,GACFA,EAAMC,0FAKR,OACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgF,EAAD,CACEvC,eAAgBtC,KAAKC,MAAMqC,eAC3BwC,SAAU9E,KAAKC,MAAM6E,SACrBnC,KAAM3C,KAAKC,MAAM0C,KACjBD,SAAU1C,KAAKC,MAAMyC,SACrBK,OAAQ/C,KAAKC,MAAM8C,OACnBhB,OAAQ/B,KAAKC,MAAM8B,OACnBe,WAAY9C,KAAKC,MAAM6C,WACvBF,iBAAkB5C,KAAKC,MAAM2C,iBAC7BI,8BAA+BhD,KAAKC,MAAM+C,kCAIhDrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACkF,EAAD,CACEf,aAAchE,KAAKC,MAAM+D,aACzBG,iBAAkBnE,KAAKC,MAAMkE,iBAC7BG,eAAgBtE,KAAKC,MAAMqE,eAC3B3B,KAAM3C,KAAKC,MAAM0C,KACjBD,SAAU1C,KAAKC,MAAMyC,SACrBK,OAAQ/C,KAAKC,MAAM8C,OACnBhB,OAAQ/B,KAAKC,MAAM8B,OACnB2B,WAAY1D,KAAKC,MAAMyD,WACvBZ,WAAY9C,KAAKC,MAAM6C,WACvBa,wBAAyB3D,KAAKC,MAAM0D,wBACpCC,mBAAoB5D,KAAKC,MAAM2D,mBAC/BC,aAAc7D,KAAKC,MAAM4D,aACzBV,YAAanD,KAAKC,MAAMkD,eAG5BxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,aAAasC,QAASrC,KAAK0E,cAAnC,6BA/Cc1D,IAAMC,WCLxB+D,EAAS,mIAETC,EAAO,CAGXC,OAHW,SAGJvC,EAAMD,EAAUX,EAAQgB,GAI7B,OAFAoC,QAAQC,IAAR,sFAAAC,OAAkG1C,EAAlG,cAAA0C,OAAmH3C,EAAnH,aAAA2C,OAAuItD,EAAvI,YAAAsD,OAAwJtC,IAEjJuC,MAAK,sFAAAD,OAAuF1C,EAAvF,cAAA0C,OAAwG3C,EAAxG,aAAA2C,OAA4HtD,EAA5H,YAAAsD,OAA6ItC,GAAU,CACjKwC,QAAS,CACPC,cAAa,UAAAH,OAAYL,MAG5BS,KAAK,SAAAC,GACJ,OAAOA,EAASC,QACf,SAAAC,GACDT,QAAQC,IAAI,0BAA2BQ,KAExCH,KAAK,SAAAI,GAGJ,GADAV,QAAQC,IAAI,eAAgBS,EAAa1E,YACrC0E,EAAa1E,WAAY,CAC3BgE,QAAQC,IAAIS,EAAa1E,YAEzB,IACM2E,EAAQ,KACVtF,EAAgB,GAEpB,OAAOqF,EAAa1E,WAAWC,IAAI,SAAAlB,GAEjC,GAAmC,KAA/BA,EAASwC,SAASqD,SAA6C,KAA3B7F,EAASwC,SAAShC,MAAqD,kBAA/BR,EAASwC,SAASqD,UAA2D,kBAA3B7F,EAASwC,SAAShC,KAAoB,CAEtK,IAAMsF,EAAgB9F,EAASwC,SAASqD,SAASE,QAAQH,EAAO,KAC1DpF,EAAOR,EAASwC,SAAShC,KAAKuF,QAAQH,EAAO,KAC7CnF,EAAQT,EAASwC,SAAS/B,MAC1BuF,EAAMhG,EAASwC,SAASyD,SAE9B3F,EAAa,GAAA6E,OAbE,sCAaFA,OAAsBW,EAAtB,KAAAX,OAAuC3E,EAAvC,KAAA2E,OAA+C1E,EAA/C,KAAA0E,OAAwDa,QAErE1F,EAAgBN,EAASkG,IAI3B,MAAO,CACL7E,GAAIrB,EAASqB,GACblB,SAAUH,EAASmG,UACnB9F,KAAML,EAASK,KACfE,QAASP,EAASwC,SAASqD,SAC3BrF,KAAMR,EAASwC,SAAShC,KACxBC,MAAOT,EAASwC,SAAS/B,MACzBC,QAASV,EAASwC,SAASyD,SAC3BtF,SAAUX,EAASoG,WAAW,GAAGC,MACjCzF,OAAQZ,EAASY,OACjBC,YAAab,EAASsG,aACtBrG,QAASD,EAASkG,IAElB5F,cAAeA,OAMpB,SAAAoF,GAAK,OAAIT,QAAQC,IAAIQ,MAI1Ba,UAjEW,SAiEDC,GACR,OAAOpB,MAAK,kFAAAD,OAAmFqB,GAAQ,CACrGnB,QAAS,CACPC,cAAa,UAAAH,OAAYL,MAG5BS,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAAQ,SAAAC,GAAK,OAAIT,QAAQC,IAAIQ,KACvDH,KAAK,SAAAI,GACJ,OAAOA,EAAac,MAAMvF,IAAI,SAACwF,EAAStD,GACtC,OAAOsD,EAAO,QAGf,SAAAhB,GAAK,OAAIT,QAAQC,IAAIQ,KACvBiB,MAAM,SAAAjB,GAAK,OAAIT,QAAQC,IAAIQ,OC0CjBkB,cA/Gb,SAAAA,EAAY7G,GAAO,IAAA+B,EAAA,OAAAC,OAAA8E,EAAA,EAAA9E,CAAAjC,KAAA8G,IACjB9E,EAAAC,OAAA+E,EAAA,EAAA/E,CAAAjC,KAAAiC,OAAAgF,EAAA,EAAAhF,CAAA6E,GAAAI,KAAAlH,KAAMC,KAeRkH,sBAAwB,WACQ,UAA1BnF,EAAKrB,MAAM+C,YACb1B,EAAKoF,SAAS,CACZ1D,WAAY,MAnBC1B,EAwBnBqF,4BAA8B,WAC5BrF,EAAKoF,SAAS,CACZxE,iBAAkB,MA1BHZ,EAkEnBc,WAAa,SAACH,EAAMD,EAAUX,GAAuB,IAAfgB,EAAeuE,UAAAlE,OAAA,QAAAmE,IAAAD,UAAA,GAAAA,UAAA,GAAN,EAC7CrC,EAAKC,OAAOvC,EAAMD,EAAUX,EAAQgB,GAAQ0C,KAAK,SAAAtE,GAC/Ca,EAAKoF,SAAS,CACZjG,WAAYA,OArECa,EA0EnB6B,aAAe,SAACnB,GACduC,EAAKwB,UAAUzE,EAAKrB,MAAM+B,UAAU+C,KAAK,SAAApC,GACvCrB,EAAKoF,SAAS,CACZjE,YAAaE,OA1EjBrB,EAAKrB,MAAQ,CACXQ,WAAY,GACZwB,KAAM,GACND,SAAU,GACVK,OAAQ,EACRhB,OAAQ,aACRa,iBAAkB,GAClBgB,mBAAoB,GACpBF,WAAY,GACZP,YAAa,CAAC,GAAI,GAAI,KAZPnB,kFA8BAF,EAAc0F,GAC/BxH,KAAKoH,SAAS,CACZrF,OAAQD,EACRc,iBAAkB4E,EAAEC,kDAIP9C,GACf3E,KAAKoH,SAAS,CACZzE,KAAMgC,EAAM8C,OAAOlE,MACnBG,WAAYiB,EAAMrD,IAClBsC,mBAAoBe,EAAM8C,OAAOlG,kDAIhBoD,GACnB3E,KAAKoH,SAAS,CACZ1E,SAAUiC,EAAM8C,OAAOlE,MACvBG,WAAYiB,EAAMrD,IAClBsC,mBAAoBe,EAAM8C,OAAOlG,gDAIlBoD,GACjB,IAAI+C,EAAiBC,KAAKC,MAA2B,QAArBjD,EAAM8C,OAAOlE,OAG7CmE,EAAiBA,EAAiB,IAAQ,IAAQA,EAElD1H,KAAKoH,SAAS,CACZrE,OAAQ2E,EACRhE,WAAYiB,EAAMrD,IAClBsC,mBAAoBe,EAAM8C,OAAOlG,sCAqB5B,IAAAsG,EAAA7H,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACiI,EAAD,CACEhF,WAAY9C,KAAK8C,WACjBR,eAAgB,SAACR,EAAc0F,GAAf,OAAqBK,EAAKE,mBAAmBjG,EAAc0F,IAC3ExD,aAAc,SAACW,GAAD,OAAWkD,EAAKG,iBAAiBrD,IAC/CR,iBAAkB,SAACQ,GAAD,OAAWkD,EAAKI,qBAAqBtD,IACvDL,eAAgB,SAACK,GAAD,OAAWkD,EAAKK,mBAAmBvD,IACnDhC,KAAM3C,KAAKW,MAAMgC,KACjBD,SAAU1C,KAAKW,MAAM+B,SACrBX,OAAQ/B,KAAKW,MAAMoB,OACnBgB,OAAQ/C,KAAKW,MAAMoC,OACnBH,iBAAkB5C,KAAKW,MAAMiC,iBAC7Bc,WAAY1D,KAAKW,MAAM+C,WACvBV,8BAA+BhD,KAAKqH,4BACpC1D,wBAAyB3D,KAAKmH,sBAC9BvD,mBAAoB5D,KAAKW,MAAMiD,mBAC/BC,aAAc7D,KAAK6D,aACnBV,YAAanD,KAAKW,MAAMwC,cAE1BxD,EAAAC,EAAAC,cAACsI,EAAD,CAAchH,WAAYnB,KAAKW,MAAMQ,qBA1G3BF,aCEEmH,QACW,cAA7BC,OAAO3F,SAAS4F,UAEe,UAA7BD,OAAO3F,SAAS4F,UAEhBD,OAAO3F,SAAS4F,SAASC,MACvB,2DCZNC,IAASC,OAAO9I,EAAAC,EAAAC,cAAC6I,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,KAAK,SAAAuD,GACjCA,EAAaC","file":"static/js/main.315a6251.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n\r\n  render() {\r\n    // UNCOMMENT\r\n    // console.log(this.props.business.urlYelp)\r\n    return (\r\n      <div className=\"Business\">\r\n      <div className=\"image-container\">\r\n        <a href={this.props.business.urlYelp}><img src={this.props.business.imageSrc} alt=''/></a>\r\n      </div>\r\n      <h2>{this.props.business.name}</h2>\r\n      <div className=\"Business-information\">\r\n        <a href={this.props.business.urlGoogleMaps}>\r\n          <div className=\"Business-address\" >\r\n            <p>{this.props.business.address}</p>\r\n            <p>{this.props.business.city}</p>\r\n            <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n          </div>\r\n        </a>\r\n        <div className=\"Business-reviews\">\r\n          <h3>{this.props.business.category}</h3>\r\n          <h3 className=\"rating\">{this.props.business.rating}</h3>\r\n          <p>{this.props.business.reviewCount}</p>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business.js';\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BusinessList\"> {\r\n        this.props.businesses.map(business => {\r\n          return <Business business={business} key={business.id}/>;\r\n        })\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BusinessList;","import React, {\r\n  Component\r\n} from 'react';\r\n\r\n// doesn't this need to be INSIDE the component?!\r\nconst sortByOptions = {\r\n  \"Best Match\": \"best_match\",\r\n  \"Highest Rated\": \"rating\",\r\n  \"Most Reviewed\": \"review_count\",\r\n  \"Distance\": \"distance\"\r\n}\r\n\r\nclass SortByOptions extends Component {\r\n  getSortByClass(sortByOption) {\r\n    if (this.props.sortBy === sortByOption) {\r\n      return \"active\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(sortByOptions).map(sortByOption => {\r\n      // sortByOptionValue is an [] of the SortByOptions values, ie the Yelp formatting\r\n      let sortByOptionValue = sortByOptions[sortByOption];\r\n      return <li className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}\r\n      onClick={this.props.onSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\r\n    });\r\n  }\r\n  // do I need the \"this\" in the bind function? because onSortByChange is already an arrow function...\r\n\r\n  // this is actually running anytime anyting in the App updates, because there are setState() calls in an ancestor Component - App. Should I move the state to a lower component? It seems like I need it there because some Yelp API response data is sent to components that branch from that ancestor App component. That's why the \"if\" below tests to only fire the API call if the click event target element was an <li> (as opposed to an input field).\r\n  // Awkward implmentation (unexpected user actions cause API requests), must be a better way of accomplishing this\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.location !== \"\" && this.props.term !== \"\" && this.props.clickEventTarget.toString() === \"[object HTMLLIElement]\") {\r\n      this.props.searchYelp(this.props.term, this.props.location, this.props.sortBy, this.props.radius);\r\n      this.props.onHandleClearClickEventTarget();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderSortByOptions();\r\n  }\r\n}\r\n\r\nexport default SortByOptions;","import React, {\r\n  Component\r\n} from 'react';\r\n\r\nclass LocationSuggestions extends Component {\r\n  renderLocationSuggestions() {\r\n    if (this.props.suggestions.length > 0) {\r\n      return this.props.suggestions.map((suggestion, index) => {\r\n        return <option key={suggestion} value={suggestion}>{suggestion}</option>;\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderLocationSuggestions();\r\n  }\r\n}\r\n\r\nexport default LocationSuggestions;","import React, {\r\n  Component\r\n} from 'react';\r\nimport LocationSuggestions from './../LocationSuggestions/LocationSuggestions';\r\n\r\nclass InputFields extends Component {\r\n\r\n  // same solution (but there's probably a better one!) as componentDidUpdate in SortByOptions.jsx\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.location !== \"\" && this.props.term !== \"\" && this.props.keyPressed === \"Enter\") {\r\n      this.props.searchYelp(this.props.term, this.props.location, this.props.sortBy, this.props.radius);\r\n      this.props.onHandleClearEnterPress();\r\n    } else if (this.props.clickEventTargetId === \"locationInputField\" && this.props.location !== \"\" && this.props.suggestions === prevProps.suggestions) {\r\n      // double check this logic??!!\r\n      this.props.getLocations(this.props.location);\r\n      // this.props.searchYelp(this.props.term, this.props.location, this.props.sortBy, this.props.radius);\r\n      // this.props.onHandleClearEnterPress();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <input id=\"termInputField\" onKeyUp={this.props.onTermChange} placeholder=\"Food Category or Business Name\" />\r\n      <input list=\"locations\" id=\"locationInputField\" onKeyUp={this.props.onLocationChange} placeholder=\"Where?\" />\r\n      <datalist id=\"locations\">\r\n        <LocationSuggestions suggestions={this.props.suggestions} />\r\n      </datalist>\r\n      <input id=\"radiusInputField\" type=\"number\" onKeyUp={this.props.onRadiusChange} placeholder=\"Radius to Search (miles)\" min=\"0\" max=\"31\" />\r\n    </React.Fragment>)\r\n  }\r\n}\r\n\r\nexport default InputFields;","import React from 'react';\r\nimport './SearchBar.css';\r\nimport SortByOptions from './../SortByOptions/SortByOptions';\r\nimport InputFields from './../InputFields/InputFields';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  handleSearch = (event) => {\r\n    if (this.props.term !== \"\" && this.props.location !== \"\")\r\n      this.props.searchYelp(this.props.term, this.props.location, this.props.sortBy, this.props.radius);\r\n    // UNCOMMENT\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            <SortByOptions\r\n              onSortByChange={this.props.onSortByChange}\r\n              onSortBy={this.props.onSortBy}\r\n              term={this.props.term}\r\n              location={this.props.location}\r\n              radius={this.props.radius}\r\n              sortBy={this.props.sortBy}\r\n              searchYelp={this.props.searchYelp}\r\n              clickEventTarget={this.props.clickEventTarget}\r\n              onHandleClearClickEventTarget={this.props.onHandleClearClickEventTarget}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <InputFields\r\n            onTermChange={this.props.onTermChange}\r\n            onLocationChange={this.props.onLocationChange}\r\n            onRadiusChange={this.props.onRadiusChange}\r\n            term={this.props.term}\r\n            location={this.props.location}\r\n            radius={this.props.radius}\r\n            sortBy={this.props.sortBy}\r\n            keyPressed={this.props.keyPressed}\r\n            searchYelp={this.props.searchYelp}\r\n            onHandleClearEnterPress={this.props.onHandleClearEnterPress}\r\n            clickEventTargetId={this.props.clickEventTargetId}\r\n            getLocations={this.props.getLocations}\r\n            suggestions={this.props.suggestions}\r\n          />\r\n        </div>\r\n        <div className=\"SearchBar-submit\">\r\n          <a href=\"google.com\" onClick={this.handleSearch}>Search for Food!</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;","const apiKey = \"WvKO6dMbgBJ-ndYhfhPPUrI7WwNby-8UNMX5eSwJhouJaq5MW3Us-sK02zMuv1biTP1MkZi787wXUe17X8ChJhr3NljlY9NjhGFWlqcBrefGx55883XJxT2pFnNnXHYx\";\r\n\r\nconst Yelp = {\r\n\r\n  // searching for businesses\r\n  search(term, location, sortBy, radius) {\r\n    // UNCOMMENT\r\n    console.log(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}&radius=${radius}`);\r\n\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}&radius=${radius}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      return response.json();\r\n    }, error => {\r\n      console.log(\"response from fetch(): \", error);\r\n    })\r\n    .then(jsonResponse => {\r\n      // UNCOMMENT\r\n      console.log(\"jsonResponse\", jsonResponse.businesses);\r\n      if (jsonResponse.businesses) {\r\n        console.log(jsonResponse.businesses);\r\n\r\n        const googleMapsUrl = `https://www.google.com/maps/place/`;\r\n        const space = / /g;\r\n        let urlGoogleMaps = \"\";\r\n\r\n        return jsonResponse.businesses.map(business => {\r\n\r\n          if (business.location.address1 !== \"\" & business.location.city !== \"\" && typeof business.location.address1 === \"string\" && typeof business.location.city === \"string\" ) {\r\n            // creates a formatted URL to open each business' location in Google Maps\r\n            const streetAddress = business.location.address1.replace(space, '+');\r\n            const city = business.location.city.replace(space, '+');\r\n            const state = business.location.state;\r\n            const zip = business.location.zip_code;\r\n\r\n            urlGoogleMaps = `${googleMapsUrl}${streetAddress}+${city}+${state}+${zip}`\r\n          } else {\r\n            urlGoogleMaps = business.url;\r\n          }\r\n\r\n          // returns an object of each business' data selected from the Yelp API response\r\n          return {\r\n            id: business.id,\r\n            imageSrc: business.image_url,\r\n            name: business.name,\r\n            address: business.location.address1,\r\n            city: business.location.city,\r\n            state: business.location.state,\r\n            zipCode: business.location.zip_code,\r\n            category: business.categories[0].title,\r\n            rating: business.rating,\r\n            reviewCount: business.review_count,\r\n            urlYelp: business.url,\r\n            // adds the formatted URL as well\r\n            urlGoogleMaps: urlGoogleMaps\r\n\r\n\r\n          }\r\n        })\r\n      }\r\n    }, error => console.log(error));\r\n  },\r\n\r\n  // autocomplete response of suggested locations\r\n  locations(text) {\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/autocomplete?&text=${text}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`\r\n      }\r\n    })\r\n    .then(response => response.json(), error => console.log(error))\r\n    .then(jsonResponse => {\r\n      return jsonResponse.terms.map((element, index) => {\r\n        return element[\"text\"];\r\n      })\r\n\r\n    }, error => console.log(error))\r\n    .catch(error => console.log(error));\r\n  }\r\n}\r\n\r\nexport { Yelp };\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList.js';\r\nimport SearchBar from './components/SearchBar/SearchBar.js';\r\nimport {\r\n  Yelp\r\n} from './util/Yelp.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businesses: [],\r\n      term: \"\",\r\n      location: \"\",\r\n      radius: 0,\r\n      sortBy: \"best_match\",\r\n      clickEventTarget: \"\",\r\n      clickEventTargetId: \"\",\r\n      keyPressed: \"\",\r\n      suggestions: [\"\", \"\", \"\"]\r\n    }\r\n  }\r\n\r\n  handleClearEnterPress = () => {\r\n    if (this.state.keyPressed === \"Enter\") {\r\n      this.setState({\r\n        keyPressed: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClearClickEventTarget = () => {\r\n    this.setState({\r\n      clickEventTarget: \"\"\r\n    });\r\n  }\r\n\r\n  handleSortByChange(sortByOption, e) {\r\n    this.setState({\r\n      sortBy: sortByOption,\r\n      clickEventTarget: e.target\r\n    });\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value,\r\n      keyPressed: event.key,\r\n      clickEventTargetId: event.target.id\r\n    });\r\n  }\r\n\r\n  handleLocationChange(event) {\r\n    this.setState({\r\n      location: event.target.value,\r\n      keyPressed: event.key,\r\n      clickEventTargetId: event.target.id\r\n    });\r\n  }\r\n\r\n  handleRadiusChange(event) {\r\n    let radiusInMeters = Math.floor(event.target.value * 1609.34);\r\n\r\n    // better way would be data validation at the input field level that prompts the user for a lower radius!\r\n    radiusInMeters = radiusInMeters > 50000 ? 50000 : radiusInMeters;\r\n\r\n    this.setState({\r\n      radius: radiusInMeters,\r\n      keyPressed: event.key,\r\n      clickEventTargetId: event.target.id\r\n    });\r\n  }\r\n\r\n  searchYelp = (term, location, sortBy, radius = 0) => {\r\n    Yelp.search(term, location, sortBy, radius).then(businesses => {\r\n      this.setState({\r\n        businesses: businesses\r\n      });\r\n    })\r\n  }\r\n\r\n  getLocations = (location) => {\r\n    Yelp.locations(this.state.location).then(suggestion => {\r\n      this.setState({\r\n        suggestions: suggestion\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar\r\n          searchYelp={this.searchYelp}\r\n          onSortByChange={(sortByOption, e) => this.handleSortByChange(sortByOption, e)}\r\n          onTermChange={(event) => this.handleTermChange(event)}\r\n          onLocationChange={(event) => this.handleLocationChange(event)}\r\n          onRadiusChange={(event) => this.handleRadiusChange(event)}\r\n          term={this.state.term}\r\n          location={this.state.location}\r\n          sortBy={this.state.sortBy}\r\n          radius={this.state.radius}\r\n          clickEventTarget={this.state.clickEventTarget}\r\n          keyPressed={this.state.keyPressed}\r\n          onHandleClearClickEventTarget={this.handleClearClickEventTarget}\r\n          onHandleClearEnterPress={this.handleClearEnterPress}\r\n          clickEventTargetId={this.state.clickEventTargetId}\r\n          getLocations={this.getLocations}\r\n          suggestions={this.state.suggestions}\r\n        />\r\n        <BusinessList businesses={this.state.businesses} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}